/*----------------------------------------------------------

Author: Ashung Hung
Homepage: https://github.com/Ashung/Automate-Sketch
License: https://creativecommons.org/licenses/by-sa/4.0

----------------------------------------------------------*/

@import "../Utilities/Google_Analytics.cocoascript";

var selectAllGroupsInSelection = function(context) {
    selectLayersInSelectionByType(context, "MSLayerGroup");
};

var selectAllTextsInSelection = function(context) {
    selectLayersInSelectionByType(context, "MSTextLayer");
};

var selectAllShapesInSelection = function(context) {
    selectLayersInSelectionByType(context, "MSShapeGroup");
};

var selectAllImagesInSelection = function(context) {
    selectLayersInSelectionByType(context, "MSBitmapLayer");
};

var selectAllSymbolInstancesInSelection = function(context) {
    selectLayersInSelectionByType(context, "MSSymbolInstance");
};

var selectAllSlicesInSelection = function(context) {
    selectLayersInSelectionByType(context, "MSSliceLayer");
};

var selectAllExportableInSelection = function(context) {

    var sketch = context.api();
    var doc = context.document;
    var page = doc.currentPage();
    var selection = context.selection;

    // Fix Sketch 45
    if (page.deselectAllLayers) {
        page.deselectAllLayers();
    } else {
        page.changeSelectionBySelectingLayers(nil);
    }

    if (selection.count() > 0) {
        var loopSelection = selection.objectEnumerator();
        while (layer = loopSelection.nextObject()) {
            var loopChildren = layer.children().objectEnumerator();
            var child;
            while (child = loopChildren.nextObject()) {
                if (child.exportOptions().exportFormats().count() > 0 && child.class() != "MSSliceLayer") {
                    // Fix Sketch 45
                    if (sketch.build < 43475) {
                        child.select_byExpandingSelection(true, true);
                    } else {
                        child.select_byExtendingSelection(true, true);
                    }
                }
            }
        }
    } else {
        var loopChildren = page.children().objectEnumerator();
        var child;
        while (child = loopChildren.nextObject()) {
            if (child.exportOptions().exportFormats().count() > 0 && child.class() != "MSSliceLayer") {
                // Fix Sketch 45
                if (sketch.build < 43475) {
                    child.select_byExpandingSelection(true, true);
                } else {
                    child.select_byExtendingSelection(true, true);
                }
            }
        }
    }

    ga(context, "UA-99098773-3", "Layer", context.command.identifier());

};

function selectLayersInSelectionByType(context, type) {

    var doc = context.document;
    var page = doc.currentPage();
    var selection = context.selection;

    // Fix Sketch 45
    if (page.deselectAllLayers) {
        page.deselectAllLayers();
    } else {
        page.changeSelectionBySelectingLayers(nil);
    }

    if (selection.count() > 0) {
        var loop = selection.objectEnumerator();
        while (layer = loop.nextObject()) {
            selectLayersInParent_byType(context, layer, type);
        }
    } else {
        selectLayersInParent_byType(context, page, type);
    }

    ga(context, "UA-99098773-3", "Layer", context.command.identifier(), "select_layer_type", type);

}

function selectLayersInParent_byType(context, parent, type) {

    var sketch = context.api();

    if (
        parent.containsLayers() && parent.class() != "MSShapeGroup"
    ) {

        if (type == "MSLayerGroup") {
            var loopLayes = parent.layers().objectEnumerator();
            var layer;
            while (layer = loopLayes.nextObject()) {
                if (layer.class() == type) {

                    // Fix Sketch 45
                    if (sketch.build < 43475) {
                        layer.select_byExpandingSelection(true, true);
                    } else {
                        layer.select_byExtendingSelection(true, true);
                    }

                }
                if (layer.class() == "MSArtboardGroup" || layer.class() == "MSSymbolMaster") {
                    selectLayersInParent_byType(context, layer, type);
                }
            }
        } else {
            var loopChildrens = parent.children().objectEnumerator();
            var layer;
            while (layer = loopChildrens.nextObject()) {
                if (layer.class() == type) {

                    // Fix Sketch 45
                    if (sketch.build < 43475) {
                        layer.select_byExpandingSelection(true, true);
                    } else {
                        layer.select_byExtendingSelection(true, true);
                    }

                }
            }
        }

    }

}
